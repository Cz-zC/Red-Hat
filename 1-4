YUM安装:
 


RPM安装：
 插叙：我们需要到挂载的光盘里面找到安装包，但是里面的内容太多
 
这时需要使用查找命令：ls | grep tree
（ grep命令用于查找文件里符合条件的字符串）
（ls在管道符左边'|'，作为后面grep 的输入 后面的tree是关键字)
 
最后搜索出想要的结果

rpm安装需要手动写：rpm -ivh treexxxxxxxx.rpm
 

使用tree命令：
 [root@xuegod72 Packages]# tree -L 1 /
（L是level，层级的意思）
 
目录介绍：
/：根目录，系统的入口
bin：常用的二进制命令目录
boot：内核引导系统的重要文件目录
dev：设备目录，声卡，磁盘都在里面
etc：常用的系统二进制包都在这里面
home：相当于我的文档
lib：库文件，例如用的C语言的函数库
lost+found：默认为空，通过fsck的程序来检测，例如，系统不正常关机，再开启时回从这里面找到并恢复
mnt：临时挂载目录，例如，把光盘挂载的在这里
opt：（option，可选择）一些软件包会被装在这里面
proc：系统运行的过程中，一些进程，内核的信息都会存在这里
sbin：涉及关于系统的命令和普通目录无法执行的命令都在这里，
root：可执行命令存放在这里
tmp：用来存放临时文件的
var：目录经常变动，比如var里面的log是存放系统日志的
usr：跟系统用户相关的目录
一些目录的说明情况如下：
 
目 录	说 明	   
/	处于linux系统树形结构的最顶端，它是linux文件系统的入口，所有的目录、文件、设备都在/之下	   
/bin	bin是Binary的缩写。常用的二进制命令目录。比如 ls、cp、mkdir、cut等；和/usr/bin类似	   
/boot	Linux的内核及引导系统程序所需要的文件目录	   
/dev/	dev是Device的缩写。设备文件目录，比如声卡、磁盘……在Linux中，一切都被看做文件。终端设备、磁盘等等都被看做文件 	   
/etc	常用系统及二进制安装包配置文件默认路径和服务器启动命令目录 	   
/home	普通用户的家目录默认存放目录 	   
/lib	库文件存放目录	   
/lost+found	默认为空，被FSCK（file system check用来检查和维护不一致的文件系统。若系统掉电或磁盘发生问题，可利用fsck命令对文件系统进行检查）用来放置零散文件（没有名称的文件） 当系统非法关机后，这里就会存放一些文件	   
/mnt	一般用来临时挂载存储设备的挂载目录，比如有cdrom、U盘等目录	   
/opt	表示的是可选择的意思，有些软件包也会被安装在这里，也就是定义软件包	   
/proc	操作系统运行时，进程（正在运行中的程序）信息及内核信息（比如cpu、硬盘分区、内存信息等）存放在这里。/proc目录是伪装的文件系统proc的挂载目录，proc并不是真正的文件系统。因此，这个目录是一个虚拟的目录，它是系统内存的映射，我们可以通过直接访问这个目录来获取系统信息。也就是说，这个目录的内容不在硬盘上而是在内存里 
查看咱们的内存信息,CPU信息 
cat /proc/meminfo  | grep “Mem”
cat /proc/cpuinfo	   
/sbin	大多数涉及系统管理的命令都存放在该目录中，它是超级权限用户root的可执行命令存放地，普通用户无权限执行这个目录下的命令，凡是目录sbin中包含的命令都是root权限才能执行的	   
/tmp	该目录用于存放临时文件，有时用户运行程序的时候，会产生一些临时文件。/tmp就是用来存放临时文件的。/var/tmp目录和该目录的作用是相似的,不能存放重要数据，它的权限比较特殊 
[root@xuegod60 ~]# ls –ld /tmp
drwxrwxrwt 10 root root 12288 Oct 3 20:45 /tmp/ à粘滞位（sticky bit）	   
/var	该目录的内容是经常变动的，/var下有/var/log目录用来存放系统日志的目录	   
/usr	包括与系统用户直接有关的文件和目录，例如应用程序及支持它们的库文件。类似于windows下的program files目录	   
/lib	这个目录里存放着系统最基本的动态链接共享库，包含许多被/bin/和/sbin/中的程序使用的库文件，目录/usr/lib/中含有更多用于用户程序的库文件。作用类似于windows里的DLL文件，几乎所有的应用程序都需要用到这些共享库
注：lib***.a是静态库
     lib***.so是动态库
静态库在编译时被加载到二进制文件中
动态库在运行时加载到进程的内存空间中
简单的说：这些库是为了让你的程序能够正常编译运行的
其实类似于WIN中.dll文件，几乎所有的应用程序都需要用到这些共享库	 


绝对路径和相对路径
概念
路径：在我们平时使用计算机时要找到需要的文件就必须知道文件的位置，而表示文件的位置的方式就是路径
绝对路径：在Linux中，绝对路径是从”/”开始的，比如/usr、/etc/passwd。如果一个路径是从根（/）开始的，它一定是绝对路径.（必须把完整的路径写下来）
相对路径：相对路径是以 . 或 .. 开始的（与当前的目录相比，对文件进行访问）

访问当前目录下的文件：
 
当处在下级目录时，使用相对路径访问上级的文件：
 
 
.表示当前目录
..表示上级目录



创建文件和文件夹
命令之：touch　
作用：常用来创建空文件
语法： touch 文件名
举例如下：
 
扩展：	
	用VI命令也可以创建一个新文件
命令之：mkdir
作用：创建目录
语法：mkdir  (选项) 文件名
举例如下：
 
建立嵌套目录，如下图：
 
-p是递归参数

删除文件与文件夹
用到的命令为:rm
作用: 可以删除一个目录中的一个或多个文件或目录，也可以将某个目录及其下属的所有文件及其子目录均删除掉。对于链接文件，只是删除整个链接文件，而原有文件保持不变
语法: rm (选项) 文件名
参数: -f 强制删除，没有提示
	-r 删除目录
删除文件命令（会有提示）：rm 2.txt
 
强制删除文件（没有提示）：rm -f 2.txt
 
删除文件夹(会有提示)：rm -r
 
强制删除文件夹（没有提示）：rm -rf 2
 
参数r是用来删除目录的,如果加入参数 –f 系统就不会提示,直接删除(慎用)


查看文件
命令之:ls
作用:列出指定目录下的所有文件和文件夹
语法:ls (选项)目录地址
参数: -a 显示所有文件及文件夹
	 -l 格式化显示目录下的内容列表。输出的信息从左到右依次为文件类型、权限模式、硬连接数、所有者、组、文件大小和文件的最后修改时间、文件名称
	-ltr 按最近时间进行排序举例如下:


查看当前目录下的所有文件（包括了.和..）

 
小插曲：如果你想创建一个隐藏文件，你不需要写文件名（例如：touch .a ）这时你用ls -l是查不出来的，必须用(ls -a)
 
Linux的命令是可以叠加使用，比如我不止想看.a是否存在，我还想知道他的一些执行权限
这时会使用：ls -al
 

按最近时间进行排序:
 

命令之:cat
作用：查看文件内容
语法：cat 文件名
 
命令之:more
作用:以分布形式显示文件内容
语法:more + 文件名
说明: 按下回车刷新一行，按下空格刷新一屏，输入q键退出
举例如下:
 
 命令之:less
作用:和more功能一样
语法:less +文件名
说明:linux中more与less的区别
q	more:不支持后退，但几乎不需要加参数，空格键是向下翻页，Enter键是向下翻一行，在不需要后退的情况下比较方便
q	less：支持前后翻滚，既可以向上翻页（pageup按键），也可以向下翻页（pagedown按键）。，空格键是向下翻页，Enter键是向下翻一行
如下图所示:
 
 

命令之:head
作用: 用于显示文件的开头的内容。在默认情况下，head命令显示文件的头10行内容
语法:head(选项)文件名
参数: -n 显示从文件头开始的行数
举例如下:
前三行：
 
如果什么都不加,默认输出前10行
 

命令之:tail
作用: 用于显示文件中的尾部内容。默认在屏幕上显示指定文件的末尾10行
语法:tail (选项)文件名
参数:  -n 显示文件尾部多少行的内容(n为数字)
	  -f  动态显示数据（不关闭）　　常用来查看日志
举例如下:
后三行：
 

如果什么都不加,默认输出后10行
 


复制文件和文件夹
作用：复制文件
语法：cp 源文件  目标文件
参数: -r 包含子目录和文件
举例如下:

把1.txt复制到文件夹1里面：
 

把文件夹1所有内容全部复制到文件夹2里面：
 

扩展：
将文件备份：cp xxx xxx.bak
 
等价于:cp passwd{,.bak}
(把passwd当成第一个参数，passwd.bak当成第二个参数，因为两者前缀都一样，只把后面不同的用大括号阔起来，相当于把两个合并成了一个)
 




